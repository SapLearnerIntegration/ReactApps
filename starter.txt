1. download software here : https://nodejs.org/en
2. install the software
3. execute : npx create-react-app reactapp ( all smallcase letters )
CRA	Basic React app	npx create-react-app my-app
Next.js	Full-stack, SSR, SEO					npx create-next-app@latest my-app
Vite	Fast frontend development				npm create vite@latest my-app
Remix	Full-stack with advanced routing/data	npx create-remix@latest

create-react-app is outdated/getting depreicated. use next.js instead.

4. npm install -g npm@11.4.2
npm install -g pnpm

npm install react-router-dom

# For state management (optional)
npm install @reduxjs/toolkit react-redux

# For UI components (optional - choose one)
npm install @mui/material @emotion/react @emotion/styled  # Material UI
# OR
npm install react-bootstrap bootstrap                  # React Bootstrap
# OR
npm install antd                                      # Ant Design

# For icons
npm install @mui/icons-material  # If using Material UI
# OR
npm install react-icons          # General purpose icon library


npx create-next-app@latest reactapps

√ Would you like to use TypeScript? ... No / Yes
√ Would you like to use ESLint? ... No / Yes
√ Would you like to use Tailwind CSS? ... No / Yes
√ Would you like your code inside a `src/` directory? ... No / Yes
√ Would you like to use App Router? (recommended) ... No / Yes
√ Would you like to use Turbopack for `next dev`? ... No / Yes
√ Would you like to customize the import alias (`@/*` by default)? ... No / Yes

So instead of writing: import MyComponent from '../../components/MyComponent';
You can write: import MyComponent from '@/components/MyComponent';

For Development:
To run your app in development mode, use: npm run dev
This:
Starts a local development server
Supports hot reloading
Doesn’t require a build step

For Production (when you're ready to deploy):

npm run build     # builds the app for production
npm start         # starts the production server

